version: '3.8'

services:
  db:
    image: postgis/postgis:15-3.3
    container_name: radar_db
    environment:
      POSTGRES_DB: radar_db
      POSTGRES_USER: radar_user
      POSTGRES_PASSWORD: radar_pass_dev
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U radar_user -d radar_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - radar_network

  web:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: radar_web
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgis://radar_user:radar_pass_dev@db:5432/radar_db
      - DJANGO_SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    volumes:
      - ./server:/app
      - static_files:/app/staticfiles
      - media_files:/app/media
    ports:
      - "8000:8000"
    networks:
      - radar_network
    command: python manage.py runserver 0.0.0.0:8000

  redis:
    image: redis:7-alpine
    container_name: radar_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - radar_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files:

networks:
  radar_network:
    driver: bridge